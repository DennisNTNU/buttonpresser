#ifndef SSD1306_H
#define SSD1306_H

#include <SPI.h>

/* Port B is pin D8-D13
Arduino                OLED
  D8:  reset           Res
  D9:  D/C             DC
  D10: CS              CS
  D11: MOSI            D1
  (D12: MISO) unused   
  D13: SCK             D0
*/

#define SSD1306_I2C_ADDR 0x3C

#define SSD1306_I2C_COMMAND 0x00
#define SSD1306_I2C_DATA 0x40


#define COMMAND_MODE PORTB &= ~(0b00000010);
#define DATA_MODE PORTB |= 0b00000010;

#define CS_LOW PORTB &= ~(0b00000100);
#define CS_HIGH PORTB |= 0b00000100;

#define RESET_LOW PORTB &= ~(0b00000001);
#define RESET_HIGH PORTB |= 0b00000001;

//const uint8_t font[][6] PROGMEM = {
static const uint8_t font[][6] = {
                        {0x00, 0x00, 0x00, 0x00, 0x00}, // space // 1
                        {0x00, 0x00, 0x5F, 0x00, 0x00}, // !
                        {0x00, 0x03, 0x00, 0x03, 0x00}, // "
                        {0x14, 0x7F, 0x14, 0x7F, 0x14}, // #
                        {0x26, 0x49, 0x7F, 0x49, 0x32}, // $
                        {0x63, 0x13, 0x08, 0x64, 0x63}, // %
                        {0x36, 0x49, 0x51, 0x30, 0x48}, // &
                        {0x00, 0x03, 0x00, 0x00, 0x00}, // '
                        {0x00, 0x3E, 0x41, 0x00, 0x00}, // (
                        {0x00, 0x00, 0x41, 0x3E, 0x00}, // ) // 10
                        {0x00, 0x07, 0x05, 0x07, 0x00}, // *
                        {0x08, 0x08, 0x3E, 0x08, 0x08}, // +
                        {0x00, 0x40, 0x30, 0x00, 0x00}, // ,
                        {0x08, 0x08, 0x08, 0x08, 0x00}, // -
                        {0x00, 0x40, 0x00, 0x00, 0x00}, // .
                        {0x00, 0x60, 0x18, 0x06, 0x00}, // /
                        {0x3E, 0x51, 0x49, 0x45, 0x3E}, // 0
                        {0x00, 0x42, 0x7F, 0x40, 0x00}, // 1
                        {0x42, 0x61, 0x51, 0x49, 0x46}, // 2
                        {0x22, 0x41, 0x49, 0x49, 0x36}, // 3 // 20
                        {0x18, 0x14, 0x12, 0x7F, 0x10}, // 4
                        {0x07, 0x49, 0x49, 0x49, 0x30}, // 5
                        {0x3E, 0x49, 0x49, 0x49, 0x30}, // 6
                        {0x01, 0x01, 0x01, 0x01, 0x7F}, // 7
                        {0x36, 0x49, 0x49, 0x49, 0x36}, // 8
                        {0x06, 0x49, 0x49, 0x49, 0x3E}, // 9
                        {0x00, 0x00, 0x24, 0x00, 0x00}, // :
                        {0x00, 0x40, 0x34, 0x00, 0x00}, // ;
                        {0x08, 0x14, 0x22, 0x41, 0x00}, // <
                        {0x00, 0x14, 0x14, 0x14, 0x14}, // = // 30
                        {0x00, 0x41, 0x22, 0x14, 0x08}, // >
                        {0x00, 0x02, 0x59, 0x06, 0x00}, // ?
                        {0x3E, 0x41, 0x49, 0x55, 0x1F}, // @ // 33
                        {0x7E, 0x09, 0x09, 0x09, 0x7E}, // A
                        {0x7F, 0x49, 0x49, 0x49, 0x36}, // B
                        {0x3E, 0x41, 0x41, 0x41, 0x22}, // C
                        {0x7F, 0x41, 0x41, 0x41, 0x3E}, // D
                        {0x7F, 0x49, 0x49, 0x49, 0x41}, // E
                        {0x7F, 0x09, 0x09, 0x09, 0x01}, // F
                        {0x3E, 0x41, 0x49, 0x49, 0x39}, // G // 40
                        {0x7F, 0x08, 0x08, 0x08, 0x7F}, // H
                        {0x00, 0x41, 0x7F, 0x41, 0x00}, // I
                        {0x21, 0x41, 0x41, 0x41, 0x3F}, // J
                        {0x7F, 0x08, 0x08, 0x08, 0x77}, // K
                        {0x7F, 0x40, 0x40, 0x40, 0x40}, // L
                        {0x7F, 0x02, 0x0E, 0x02, 0x7F}, // M
                        {0x7F, 0x02, 0x1C, 0x20, 0x7F}, // N
                        {0x3E, 0x41, 0x41, 0x41, 0x3E}, // O
                        {0x7F, 0x09, 0x09, 0x09, 0x06}, // P
                        {0x3E, 0x41, 0x51, 0x61, 0x3E}, // Q // 50
                        {0x7F, 0x09, 0x09, 0x09, 0x76}, // R
                        {0x46, 0x49, 0x49, 0x49, 0x31}, // S
                        {0x01, 0x01, 0x7F, 0x01, 0x01}, // T
                        {0x3F, 0x40, 0x40, 0x40, 0x3F}, // U
                        {0x07, 0x38, 0x60, 0x38, 0x07}, // V
                        {0x3F, 0x40, 0x38, 0x40, 0x3F}, // W
                        {0x63, 0x14, 0x08, 0x14, 0x63}, // X
                        {0x07, 0x08, 0x70, 0x08, 0x07}, // Y
                        {0x61, 0x51, 0x49, 0x45, 0x43}, // Z // 59
                        {0x00, 0x7F, 0x41, 0x00, 0x00}, // [
                        {0x00, 0x06, 0x18, 0x60, 0x00}, // backslash
                        {0x00, 0x41, 0x7F, 0x00, 0x00}, // ]
                        {0x04, 0x02, 0x01, 0x02, 0x04}, // ^
                        {0x40, 0x40, 0x40, 0x40, 0x40}, // _
                        {0x00, 0x01, 0x02, 0x00, 0x00}, // ` // 65
                        {0x38, 0x44, 0x44, 0x28, 0x7C}, // a
                        {0x7F, 0x44, 0x44, 0x44, 0x38}, // b
                        {0x38, 0x44, 0x44, 0x44, 0x00}, // c
                        {0x38, 0x44, 0x44, 0x44, 0x7F}, // d
                        {0x38, 0x54, 0x54, 0x54, 0x08}, // e // 70
                        {0x00, 0x7E, 0x09, 0x02, 0x00}, // f
                        {0x4C, 0x92, 0x92, 0x92, 0x7C}, // g
                        {0x7F, 0x08, 0x08, 0x08, 0x70}, // h
                        {0x00, 0x48, 0x7A, 0x40, 0x00}, // i
                        {0x00, 0x80, 0x88, 0x7A, 0x00}, // j
                        {0x00, 0x7F, 0x10, 0x28, 0x44}, // k
                        {0x00, 0x3F, 0x40, 0x40, 0x00}, // l
                        {0x78, 0x08, 0x78, 0x08, 0x78}, // m
                        {0x00, 0x78, 0x08, 0x78, 0x00}, // n
                        {0x38, 0x44, 0x44, 0x44, 0x38}, // o // 80
                        {0xFC, 0x22, 0x22, 0x22, 0x1C}, // p
                        {0x1C, 0x22, 0x22, 0x22, 0xFC}, // q
                        {0x00, 0x7C, 0x08, 0x04, 0x00}, // r
                        {0x48, 0x54, 0x54, 0x24, 0x00}, // s
                        {0x00, 0x04, 0x3F, 0x44, 0x20}, // t
                        {0x3C, 0x40, 0x40, 0x20, 0x7C}, // u
                        {0x18, 0x20, 0x40, 0x20, 0x18}, // v
                        {0x38, 0x40, 0x38, 0x40, 0x38}, // w
                        {0x00, 0x48, 0x30, 0x30, 0x48}, // x
                        {0x8C, 0x50, 0x20, 0x10, 0x0C}, // y // 90
                        {0x00, 0x48, 0x68, 0x58, 0x48}, // z
                        
                        {0x7C, 0x46, 0x7E, 0x00, 0x00}, // representing LMB // 92
                        {0x00, 0x00, 0x7E, 0x46, 0x7C}, // representing RMB // 93
                        {0x00, 0x00, 0x1C, 0x00, 0x00}, // representing MMB // 94
                        {0x04, 0x02, 0x6F, 0x02, 0x04}, // representing SCRLUP // 95
                        {0x10, 0x20, 0x7B, 0x20, 0x10}, // representing SCRLDWN // 96
                        {0x62, 0x15, 0x00, 0x6F, 0x4A}, // representing CTRL // 97
                        {0x08, 0x3C, 0x26, 0x3C, 0x08}, // representing Shift // 98
                        {0x70, 0x46, 0x11, 0x76, 0x10}  // representing ALT // 99
                        };// __attribute__(PROGMEM);

byte char_to_font_index(char chr);

void setupOled_SPI();
void clearDisplay_SPI();
void setTestPattern_SPI();
void writeFont_SPI();
void writeString_SPI(const char* string);

void initScroll_SPI();
void startScroll_SPI();
void stopScroll_SPI();

void setWriteAddress_SPI(byte x, byte y);
void writeText_SPI(const char* string, byte x, byte y);




void setWriteAddress_I2C(byte x, byte y);
void setWriteRect_I2C(byte x, byte y, byte lx, byte ly);

void clearDisplay_I2C();
void setTestPattern_I2C();
void writeFont_I2C();

void setupOled_I2C(int width_, int height_);

void writeString_I2C(const char* string);
void writeText_I2C(const char* string, byte x, byte y);

#endif

/*
 ____________
|    ##    --|
|  ####    --|
|    ##    --|
|    ##    --|
|    ##    --|
|    ##    --|
|  ######  --|
|------------|  0x00, 0x42, 0x7F, 0x40, 0x00

 ____________    ____________
|    ##    --|  |  ######  --|
|  ##  ##  --|  |##      ##--|
|      ##  --|  |        ##--|
|      ##  --|  |      ##  --|
|    ##    --|  |    ##    --|
|  ##      --|  |  ##      --|
|  ######  --|  |##########--|
|------------|  |------------|

  ____________
 |          --|
 |  ####    --|
 |######    --|
 |##  ##    --|
 |##  ##    --|
 |##  ##    --|
 |######    --|
 |------------|  0x7C, 0x46, 0x7E, 0x00, 0x00

  ____________
 |          --|
 |    ####  --|
 |    ######--|
 |    ##  ##--|
 |    ##  ##--|
 |    ##  ##--|
 |    ######--|
 |------------|  0x00, 0x00, 0x7E, 0x46, 0x7C

  ____________
 |          --|
 |          --|
 |    ##    --|
 |    ##    --|
 |    ##    --|
 |          --|
 |          --|
 |------------|  0x00, 0x00, 0x1C, 0x00, 0x00

  ____________
 |    ##    --|
 |  ######  --|
 |##  ##  ##--|
 |    ##    --|
 |          --|
 |    ##    --|
 |    ##    --|
 |------------|  0x04, 0x02, 0x6F, 0x02, 0x04

  ____________
 |    ##    --|
 |    ##    --|
 |          --|
 |    ##    --|
 |##  ##  ##--|
 |  ######  --|
 |    ##    --|
 |------------|  0x10, 0x20, 0x7B, 0x20, 0x10

  ____________
 |  ##  ##  --|
 |##    ####--|
 |  ##  ##  --|
 |      ####--|
 |  ##      --|
 |##    ##  --|
 |##    ####--|
 |------------|  0x62, 0x15, 0x00, 0x6F, 0x4A
 
  ____________
 |          --|
 |    ##    --|
 |  ######  --|
 |####  ####--|
 |  ##  ##  --|
 |  ######  --|
 |          --|
 |------------|  0x08, 0x3C, 0x26, 0x3C, 0x08
 
  ____________
 |    ##    --|
 |  ##  ##  --|
 |  ##  ##  --|
 |          --|
 |##  ######--|
 |##    ##  --|
 |####  ##  --|
 |------------|  0x70, 0x46, 0x11, 0x76, 0x10

*/
